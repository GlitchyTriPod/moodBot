!function(I){var n={};function l(c){if(n[c])return n[c].exports;var g=n[c]={i:c,l:!1,exports:{}};return I[c].call(g.exports,g,g.exports,l),g.l=!0,g.exports}l.m=I,l.c=n,l.d=function(I,n,c){l.o(I,n)||Object.defineProperty(I,n,{enumerable:!0,get:c})},l.r=function(I){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(I,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(I,"__esModule",{value:!0})},l.t=function(I,n){if(1&n&&(I=l(I)),8&n)return I;if(4&n&&"object"==typeof I&&I&&I.__esModule)return I;var c=Object.create(null);if(l.r(c),Object.defineProperty(c,"default",{enumerable:!0,value:I}),2&n&&"string"!=typeof I)for(var g in I)l.d(c,g,function(n){return I[n]}.bind(null,g));return c},l.n=function(I){var n=I&&I.__esModule?function(){return I.default}:function(){return I};return l.d(n,"a",n),n},l.o=function(I,n){return Object.prototype.hasOwnProperty.call(I,n)},l.p="",l(l.s=0)}([function(module,exports,__webpack_require__){"use strict";eval('\r\n\r\n//#region IMPORT\r\nconst { ipcRenderer } = __webpack_require__(1)\r\nconst audioSrc = __webpack_require__(2)\r\n//#endregion\r\n\r\n//#region CONST\r\n//#endregion\r\n\r\n//#region GLOBAL\r\nvar AUDIO_LIBRARY\r\n//#endregion\r\n\r\nAUDIO_LIBRARY = []\r\n\r\n/**\r\n * When the page is fully loaded\r\n */\r\n$(document).ready(() => {\r\n\r\n    //#region VARIABLES   \r\n    //#endregion\r\n\r\n    //#region HELPERS\r\n\r\n    /**\r\n     * Constructs an audio library UI element & saves AudioSource obj to library\r\n     * @param {AudioSource} audioSource An object containing the needed audio source information\r\n     */\r\n    const addAudioSourceToLibrary = (audioSource, save) => {\r\n        let html\r\n\r\n        html = $("#audioLibrary").html()\r\n\r\n        $("#audioLibrary").html(html + `<div class="col-md-3 card" style="color: black;text-align: center;">\r\n                <div class="card-body card-inner">\r\n                    <h5 class="card-title" id="audioTitle">${audioSource.title}</h5>\r\n                    <div class="btn-group" role="group" data-audioSource="${audioSource.files.intro},${audioSource.files.body}">\r\n                        <button type="button" class="btn btn-dark dispatchFadeIn">⤴</button>\r\n                        <button type="button" class="btn btn-dark dispatchPlay">▶</button>\r\n                        <button type="button" class="btn btn-dark dispatchPause">⏸</button>\r\n                        <button type="button" class="btn btn-dark dispatchStop">⏹</button>\r\n                        <button type="button" class="btn btn-dark dispatchFadeOut">⤵</button>\r\n                    </div>\r\n                </div>\r\n            </div>`)\r\n\r\n        AUDIO_LIBRARY.push(audioSource)\r\n\r\n        if (save) ipcRenderer.send("update-audiolib", AUDIO_LIBRARY)\r\n\r\n    }\r\n\r\n    /**\r\n     * Resets the state of the spinner + login button\r\n     */\r\n    const resetButtons = () => {\r\n        $("#spnrLoading").hide()\r\n        $("#btnClientConnect").attr("disabled", false)\r\n    }\r\n\r\n    ipcRenderer.send("load-audiolib")\r\n\r\n    //#endregion\r\n\r\n    //#region IPC EVENTS\r\n\r\n    /**\r\n     * Fires when an existing audio library has been read\r\n     * @param {IpcMainEvent} event The event object\r\n     * @param {Array} audioLib The library data, as read by the main process\r\n     */\r\n    ipcRenderer.on("load-audiolib", (event, audioLib) => {\r\n        audioLib.forEach(audioSource => {\r\n            addAudioSourceToLibrary(audioSource, false)\r\n        })\r\n    })\r\n\r\n    /**\r\n     * Fires when the client is ready\r\n     * Appends available guilds to the selectGuild dropdown menu\r\n     * @param {IpcMainEvent} event The event object\r\n     * @param {Array} availableGuilds Collection of guilds available to the client\r\n     */\r\n    ipcRenderer.on("client-ready", (event, availableGuilds) => {\r\n        let guildOptions\r\n\r\n        guildOptions = "<option default>Select a server...</option>"\r\n            + "<option> =========== </option>"\r\n\r\n        availableGuilds.forEach(guild => {\r\n            guildOptions += `<option value="${guild.id}">${guild.name}</option>`\r\n        })\r\n\r\n        // List the guild names into the server selector\r\n        $("#selectGuild").html(guildOptions)\r\n    })\r\n\r\n    /**\r\n     * Displays successful login message\r\n     * @param {IpcMainEvent} event The event object\r\n     */\r\n    ipcRenderer.on("login-successful", event => {\r\n        resetButtons()\r\n        $("#msgConnection").css("color", "#1eff00").text("✔ Connected!").fadeIn("fast")\r\n    })\r\n\r\n    /**\r\n     * Displays error message to the user if unable to log in\r\n     * @param {IpcMainEvent} event The event object\r\n     * @param {String} errMsg Error message\r\n     */\r\n    ipcRenderer.on("login-fail", (event, errMsg) => {\r\n        let msgConnection\r\n\r\n        msgConnection = $("#msgConnection")\r\n\r\n        resetButtons()\r\n\r\n        msgConnection.css("color", "red").text(`❌ ${errMsg}`).fadeIn("fast")\r\n\r\n        setTimeout(() => {\r\n            msgConnection.fadeOut("slow")\r\n        }, 3000);\r\n    })\r\n\r\n    /**\r\n     * Updates the selectChannel dropdown \r\n     * @param {IpcMainEvent} event The event object\r\n     * @param {Array} availableChannels Array of available channels\r\n     */\r\n    ipcRenderer.on("channels-returned", (event, availableChannels) => {\r\n        let channelOptions\r\n\r\n        channelOptions = "<option default>Select a channel...</option>"\r\n            + "<option> =========== </option>"\r\n\r\n        $("#selectChannel").html(() => {\r\n\r\n            availableChannels.forEach(channel => {\r\n                channelOptions += `<option value="${channel.id}">${channel.name}</option>`\r\n            })\r\n\r\n            return channelOptions\r\n        })\r\n    })\r\n\r\n    //#endregion\r\n\r\n    //#region DOM EVENTS\r\n\r\n    /**\r\n     * Handles connection button click\r\n     */\r\n    $("#btnClientConnect").on("click", () => {\r\n        let btnConnect, spnrLoading,\r\n            msgConnection\r\n\r\n        btnConnect = $("#btnClientConnect")\r\n        spnrLoading = $("#spnrLoading")\r\n        msgConnection = $("#msgConnection")\r\n\r\n        //log off current client\r\n        ipcRenderer.sendSync("client-destroy")\r\n\r\n        btnConnect.attr("disabled", true) // disable login button to prevent user from clicking multiple times\r\n        spnrLoading.show() // show spinner\r\n        msgConnection.hide() // hide "✔ Connected!" message if it exists\r\n\r\n        ipcRenderer.send("client-login", $("#txtBotToken").val())\r\n    })\r\n\r\n    /**\r\n     * Connects to the selected voice channel\r\n     */\r\n    $("#btnChannelConnect").on("click", () => {\r\n        let selectedGuildId, selectedChannelId\r\n\r\n        selectedGuildId = $("#selectGuild").val()\r\n        selectedChannelId = $("#selectChannel").val()\r\n\r\n        ipcRenderer.send("client-join-channel", selectedGuildId, selectedChannelId)\r\n    })\r\n\r\n    /**\r\n     * Populates the channel selector w/ available voice chat channels\r\n     * when guild is selected\r\n     */\r\n    $("#selectGuild").on("change", event => {\r\n        let eventTarget\r\n\r\n        eventTarget = event.target\r\n\r\n        // grab guild channels \r\n        ipcRenderer.send("client-get-channels",\r\n            eventTarget.options[eventTarget.selectedIndex].value)\r\n    })\r\n\r\n    /**\r\n     * Translates the selected file + title into a DTO to send to main process.\r\n     * Afterwards, it will construct an audio library UI element based on the file given\r\n     */\r\n    $("#saveNewAudio").on("click", event => {\r\n        let fileLoc, invalidHelper,\r\n            fileTitle, hasIntro,\r\n            fileOptions, invalid\r\n\r\n        invalid = false\r\n        hasIntro = $("#hasIntroFile").prop("checked")\r\n        fileTitle = $("#fileTitle").val()\r\n        fileLoc = $("#fileInput")[0].files[0]\r\n\r\n        invalidHelper = (bool, elementId) => {\r\n            if (bool) {\r\n                $(elementId).show()\r\n                invalid = true\r\n            }\r\n            else {\r\n                $(elementId).hide()\r\n            }\r\n        }\r\n\r\n        invalidHelper(fileTitle === "", "#invalid-title")\r\n        invalidHelper(!fileLoc, "#invalid-file")\r\n\r\n        if (invalid) return\r\n\r\n        fileLoc = fileLoc.path\r\n\r\n        if (hasIntro) {\r\n            let introFileLoc\r\n\r\n            introFileLoc = fileLoc.replace(/\\./g, "Intro.")\r\n\r\n            fileOptions = {\r\n                "intro": introFileLoc,\r\n                "body": fileLoc\r\n            }\r\n        }\r\n        else {\r\n            fileOptions = {\r\n                "body": fileLoc\r\n            }\r\n        }\r\n\r\n        addAudioSourceToLibrary(new audioSrc.AudioSource(fileTitle, fileOptions), true)\r\n\r\n        $("#dismissModal").trigger("click")\r\n    })\r\n\r\n    /**\r\n     * Plays the selected audio file\r\n     */\r\n    $("#audioLibrary").on("click", "button.dispatchPlay", () => {\r\n        ipcRenderer.send("dispatch-play",\r\n            event.target.parentElement.getAttribute("data-audioSource"), false)\r\n    })\r\n\r\n    /** \r\n     * Plays selected audio file w/ fade in \r\n     */\r\n    $("#audioLibrary").on("click", "button.dispatchFadeIn", () => {\r\n        ipcRenderer.send("dispatch-play",\r\n            event.target.parentElement.getAttribute("data-audioSource"), true)\r\n    })\r\n\r\n    /**\r\n     * Pauses the selected audio file\r\n     */\r\n    $("#audioLibrary").on("click", "button.dispatchPause", () => {\r\n        ipcRenderer.send("dispatch-pause")\r\n    })\r\n\r\n    /**\r\n     * Ends playback of audio file\r\n     */\r\n    $("#audioLibrary").on("click", "button.dispatchStop", () => {\r\n        ipcRenderer.send("dispatch-end")\r\n    })\r\n\r\n    /**\r\n     * Ends playback of audio file by fading out\r\n     */\r\n    $("#audioLibrary").on("click", "button.dispatchFadeOut", () => {\r\n        ipcRenderer.send("dispatch-fade-out")\r\n    })\r\n\r\n    //#endregion\r\n})//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n')},function(module,exports){eval('module.exports = require("electron");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJlbGVjdHJvblwiPzA0ZjMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMS5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImVsZWN0cm9uXCIpOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\n\r\n// Allow class to be exported\r\nObject.defineProperty(exports, "__esModule", {\r\n    value: true\r\n})\r\n\r\nclass AudioSource {\r\n    \r\n    constructor(fileTitle, fileOptions){\r\n        this.files = {\r\n            "intro": fileOptions.intro,\r\n            "body": fileOptions.body\r\n        }\r\n        this.title = fileTitle\r\n    }\r\n}\r\n\r\n// Enable class export\r\nexports.AudioSource = AudioSource//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9BdWRpb1NvdXJjZS5qcz82ODlmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFZOztBQUVaO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIlxyXG5cclxuLy8gQWxsb3cgY2xhc3MgdG8gYmUgZXhwb3J0ZWRcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XHJcbiAgICB2YWx1ZTogdHJ1ZVxyXG59KVxyXG5cclxuY2xhc3MgQXVkaW9Tb3VyY2Uge1xyXG4gICAgXHJcbiAgICBjb25zdHJ1Y3RvcihmaWxlVGl0bGUsIGZpbGVPcHRpb25zKXtcclxuICAgICAgICB0aGlzLmZpbGVzID0ge1xyXG4gICAgICAgICAgICBcImludHJvXCI6IGZpbGVPcHRpb25zLmludHJvLFxyXG4gICAgICAgICAgICBcImJvZHlcIjogZmlsZU9wdGlvbnMuYm9keVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnRpdGxlID0gZmlsZVRpdGxlXHJcbiAgICB9XHJcbn1cclxuXHJcbi8vIEVuYWJsZSBjbGFzcyBleHBvcnRcclxuZXhwb3J0cy5BdWRpb1NvdXJjZSA9IEF1ZGlvU291cmNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2\n')}]);